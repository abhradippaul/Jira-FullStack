/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as dashboardRouteRouteImport } from './routes/(dashboard)/route'
import { Route as PostsIndexRouteImport } from './routes/posts/index'
import { Route as dashboardIndexRouteImport } from './routes/(dashboard)/index'
import { Route as authAuthRouteRouteImport } from './routes/(auth)/auth/route'
import { Route as dashboardWorkspacesCreateIndexRouteImport } from './routes/(dashboard)/workspaces/create/index'
import { Route as dashboardWorkspacesWorkspaceIdIndexRouteImport } from './routes/(dashboard)/workspaces/$workspaceId/index'
import { Route as authAuthSignUpIndexRouteImport } from './routes/(auth)/auth/sign-up/index'
import { Route as authAuthSignInIndexRouteImport } from './routes/(auth)/auth/sign-in/index'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardRouteRoute = dashboardRouteRouteImport.update({
  id: '/(dashboard)',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardIndexRoute = dashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardRouteRoute,
} as any)
const authAuthRouteRoute = authAuthRouteRouteImport.update({
  id: '/(auth)/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardWorkspacesCreateIndexRoute =
  dashboardWorkspacesCreateIndexRouteImport.update({
    id: '/workspaces/create/',
    path: '/workspaces/create/',
    getParentRoute: () => dashboardRouteRoute,
  } as any)
const dashboardWorkspacesWorkspaceIdIndexRoute =
  dashboardWorkspacesWorkspaceIdIndexRouteImport.update({
    id: '/workspaces/$workspaceId/',
    path: '/workspaces/$workspaceId/',
    getParentRoute: () => dashboardRouteRoute,
  } as any)
const authAuthSignUpIndexRoute = authAuthSignUpIndexRouteImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => authAuthRouteRoute,
} as any)
const authAuthSignInIndexRoute = authAuthSignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => authAuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof dashboardIndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof authAuthRouteRouteWithChildren
  '/posts': typeof PostsIndexRoute
  '/auth/sign-in': typeof authAuthSignInIndexRoute
  '/auth/sign-up': typeof authAuthSignUpIndexRoute
  '/workspaces/$workspaceId': typeof dashboardWorkspacesWorkspaceIdIndexRoute
  '/workspaces/create': typeof dashboardWorkspacesCreateIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/auth': typeof authAuthRouteRouteWithChildren
  '/': typeof dashboardIndexRoute
  '/posts': typeof PostsIndexRoute
  '/auth/sign-in': typeof authAuthSignInIndexRoute
  '/auth/sign-up': typeof authAuthSignUpIndexRoute
  '/workspaces/$workspaceId': typeof dashboardWorkspacesWorkspaceIdIndexRoute
  '/workspaces/create': typeof dashboardWorkspacesCreateIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(dashboard)': typeof dashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/(auth)/auth': typeof authAuthRouteRouteWithChildren
  '/(dashboard)/': typeof dashboardIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/(auth)/auth/sign-in/': typeof authAuthSignInIndexRoute
  '/(auth)/auth/sign-up/': typeof authAuthSignUpIndexRoute
  '/(dashboard)/workspaces/$workspaceId/': typeof dashboardWorkspacesWorkspaceIdIndexRoute
  '/(dashboard)/workspaces/create/': typeof dashboardWorkspacesCreateIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth'
    | '/posts'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/workspaces/$workspaceId'
    | '/workspaces/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/auth'
    | '/'
    | '/posts'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/workspaces/$workspaceId'
    | '/workspaces/create'
  id:
    | '__root__'
    | '/(dashboard)'
    | '/about'
    | '/(auth)/auth'
    | '/(dashboard)/'
    | '/posts/'
    | '/(auth)/auth/sign-in/'
    | '/(auth)/auth/sign-up/'
    | '/(dashboard)/workspaces/$workspaceId/'
    | '/(dashboard)/workspaces/create/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  dashboardRouteRoute: typeof dashboardRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  authAuthRouteRoute: typeof authAuthRouteRouteWithChildren
  PostsIndexRoute: typeof PostsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)': {
      id: '/(dashboard)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/': {
      id: '/(dashboard)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardIndexRouteImport
      parentRoute: typeof dashboardRouteRoute
    }
    '/(auth)/auth': {
      id: '/(auth)/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof authAuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/workspaces/create/': {
      id: '/(dashboard)/workspaces/create/'
      path: '/workspaces/create'
      fullPath: '/workspaces/create'
      preLoaderRoute: typeof dashboardWorkspacesCreateIndexRouteImport
      parentRoute: typeof dashboardRouteRoute
    }
    '/(dashboard)/workspaces/$workspaceId/': {
      id: '/(dashboard)/workspaces/$workspaceId/'
      path: '/workspaces/$workspaceId'
      fullPath: '/workspaces/$workspaceId'
      preLoaderRoute: typeof dashboardWorkspacesWorkspaceIdIndexRouteImport
      parentRoute: typeof dashboardRouteRoute
    }
    '/(auth)/auth/sign-up/': {
      id: '/(auth)/auth/sign-up/'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof authAuthSignUpIndexRouteImport
      parentRoute: typeof authAuthRouteRoute
    }
    '/(auth)/auth/sign-in/': {
      id: '/(auth)/auth/sign-in/'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof authAuthSignInIndexRouteImport
      parentRoute: typeof authAuthRouteRoute
    }
  }
}

interface dashboardRouteRouteChildren {
  dashboardIndexRoute: typeof dashboardIndexRoute
  dashboardWorkspacesWorkspaceIdIndexRoute: typeof dashboardWorkspacesWorkspaceIdIndexRoute
  dashboardWorkspacesCreateIndexRoute: typeof dashboardWorkspacesCreateIndexRoute
}

const dashboardRouteRouteChildren: dashboardRouteRouteChildren = {
  dashboardIndexRoute: dashboardIndexRoute,
  dashboardWorkspacesWorkspaceIdIndexRoute:
    dashboardWorkspacesWorkspaceIdIndexRoute,
  dashboardWorkspacesCreateIndexRoute: dashboardWorkspacesCreateIndexRoute,
}

const dashboardRouteRouteWithChildren = dashboardRouteRoute._addFileChildren(
  dashboardRouteRouteChildren,
)

interface authAuthRouteRouteChildren {
  authAuthSignInIndexRoute: typeof authAuthSignInIndexRoute
  authAuthSignUpIndexRoute: typeof authAuthSignUpIndexRoute
}

const authAuthRouteRouteChildren: authAuthRouteRouteChildren = {
  authAuthSignInIndexRoute: authAuthSignInIndexRoute,
  authAuthSignUpIndexRoute: authAuthSignUpIndexRoute,
}

const authAuthRouteRouteWithChildren = authAuthRouteRoute._addFileChildren(
  authAuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  dashboardRouteRoute: dashboardRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  authAuthRouteRoute: authAuthRouteRouteWithChildren,
  PostsIndexRoute: PostsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
