/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PostsIndexRouteImport } from './routes/posts/index'
import { Route as authAuthRouteRouteImport } from './routes/(auth)/auth/route'
import { Route as authAuthSignUpIndexRouteImport } from './routes/(auth)/auth/sign-up/index'
import { Route as authAuthSignInIndexRouteImport } from './routes/(auth)/auth/sign-in/index'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRouteImport,
} as any)
const authAuthRouteRoute = authAuthRouteRouteImport.update({
  id: '/(auth)/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const authAuthSignUpIndexRoute = authAuthSignUpIndexRouteImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => authAuthRouteRoute,
} as any)
const authAuthSignInIndexRoute = authAuthSignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => authAuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof authAuthRouteRouteWithChildren
  '/posts': typeof PostsIndexRoute
  '/auth/sign-in': typeof authAuthSignInIndexRoute
  '/auth/sign-up': typeof authAuthSignUpIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof authAuthRouteRouteWithChildren
  '/posts': typeof PostsIndexRoute
  '/auth/sign-in': typeof authAuthSignInIndexRoute
  '/auth/sign-up': typeof authAuthSignUpIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/(auth)/auth': typeof authAuthRouteRouteWithChildren
  '/posts/': typeof PostsIndexRoute
  '/(auth)/auth/sign-in/': typeof authAuthSignInIndexRoute
  '/(auth)/auth/sign-up/': typeof authAuthSignUpIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth'
    | '/posts'
    | '/auth/sign-in'
    | '/auth/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/auth' | '/posts' | '/auth/sign-in' | '/auth/sign-up'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/(auth)/auth'
    | '/posts/'
    | '/(auth)/auth/sign-in/'
    | '/(auth)/auth/sign-up/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  authAuthRouteRoute: typeof authAuthRouteRouteWithChildren
  PostsIndexRoute: typeof PostsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/auth': {
      id: '/(auth)/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof authAuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/auth/sign-up/': {
      id: '/(auth)/auth/sign-up/'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof authAuthSignUpIndexRouteImport
      parentRoute: typeof authAuthRouteRoute
    }
    '/(auth)/auth/sign-in/': {
      id: '/(auth)/auth/sign-in/'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof authAuthSignInIndexRouteImport
      parentRoute: typeof authAuthRouteRoute
    }
  }
}

interface authAuthRouteRouteChildren {
  authAuthSignInIndexRoute: typeof authAuthSignInIndexRoute
  authAuthSignUpIndexRoute: typeof authAuthSignUpIndexRoute
}

const authAuthRouteRouteChildren: authAuthRouteRouteChildren = {
  authAuthSignInIndexRoute: authAuthSignInIndexRoute,
  authAuthSignUpIndexRoute: authAuthSignUpIndexRoute,
}

const authAuthRouteRouteWithChildren = authAuthRouteRoute._addFileChildren(
  authAuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  authAuthRouteRoute: authAuthRouteRouteWithChildren,
  PostsIndexRoute: PostsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
